/* generated by Svelte v3.17.2 */
import {
    SvelteComponent,
    append,
    create_component,
    destroy_component,
    detach,
    element,
    init,
    insert,
    mount_component,
    safe_not_equal,
    set_data,
    space,
    text,
    transition_in,
    transition_out,
} from '/web_modules/svelte/internal.js';
import { onMount } from '/web_modules/svelte/internal.js';
import Header from './components/Header.js';
import Footer from './components/Footer/index.js';
import { getCurrentTime } from './utils/time.js';

function create_fragment(ctx) {
    let t0;
    let div;
    let t1;
    let t2;
    let t3;
    let current;
    const header = new Header({});
    const footer = new Footer({});
    return {
        c() {
            create_component(header.$$.fragment);
            t0 = space();
            div = element('div');
            t1 = text('Current time is ');
            t2 = text(
                /*time*/
                ctx[0]
            );
            t3 = space();
            create_component(footer.$$.fragment);
        },

        m(target, anchor) {
            mount_component(header, target, anchor);
            insert(target, t0, anchor);
            insert(target, div, anchor);
            append(div, t1);
            append(div, t2);
            insert(target, t3, anchor);
            mount_component(footer, target, anchor);
            current = true;
        },

        p(ctx, [dirty]) {
            if (
                !current ||
                dirty &
                    /*time*/
                    1
            )
                set_data(
                    t2,
                    /*time*/
                    ctx[0]
                );
        },

        i(local) {
            if (current) return;
            transition_in(header.$$.fragment, local);
            transition_in(footer.$$.fragment, local);
            current = true;
        },

        o(local) {
            transition_out(header.$$.fragment, local);
            transition_out(footer.$$.fragment, local);
            current = false;
        },

        d(detaching) {
            destroy_component(header, detaching);
            if (detaching) detach(t0);
            if (detaching) detach(div);
            if (detaching) detach(t3);
            destroy_component(footer, detaching);
        },
    };
}

function instance($$self, $$props, $$invalidate) {
    onMount(() => {
        const interval = setInterval(() => {
            $$invalidate(0, (time = getCurrentTime()));
        }, 1000);
        return () => clearInterval(interval);
    });
    let time;

    $: $$invalidate(0, (time = getCurrentTime()));

    return [time];
}

class Component extends SvelteComponent {
    constructor(options) {
        super();
        init(this, options, instance, create_fragment, safe_not_equal, {});
    }
}

export default Component;
